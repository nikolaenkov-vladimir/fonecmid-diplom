Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Если Выборка.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда 
			НоваяДата = ДатаПроведенияРабот;
			ШаблонДата = "дата начала" + " " + Формат(НоваяДата, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		
		Если Выборка.ВремяНачалаРаботПлан <> ВремяНачалаРаботПлан Тогда 
			НовоеВремяНачала = ВремяНачалаРаботПлан;
			ШаблонВремяНачало = "время начала" + " " + Формат(НовоеВремяНачала, "ДФ=HH:mm");
		КонецЕсли;
		
		Если Выборка.Специалист <> Специалист Тогда 
			НовыйИсполнитель = Специалист;
			ШаблонИсполнитель = "исполнитель" + " " + НовыйИсполнитель;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НоваяДата) Или ЗначениеЗаполнено(НовоеВремяНачала) Или ЗначениеЗаполнено(НовыйИсполнитель) Тогда
			
			ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
			ШаблонНаименование = "По документу № %1";
			ОбъектУведомлениеТГ.Наименование = СтрШаблон(ШаблонНаименование, Номер);
			ШаблонСообщения = "Внесены изменения: %1 %2 %3";
			ОбъектУведомлениеТГ.Текст = СтрШаблон(ШаблонСообщения, ШаблонДата, ШаблонВремяНачало, ШаблонИсполнитель);
			ОбъектУведомлениеТГ.Записать();     
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	АбонентскоеОбслуживание = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
	|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ВКМ_ДатаНачалаДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ВКМ_ДатаОкончанияДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК ВКМ_СуммаАбонентскойПлаты,
	|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы,
	|	ВКМ_УсловияОплатыСотрудников.ПроцентОтРабот КАК ПроцентОтРабот,
	|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
	|	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудников.Сотрудник
	|ГДЕ
	|	НЕ ВКМ_ОбслуживаниеКлиента.ПометкаУдаления
	|	И ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	Если Результат.ВидДоговора <> АбонентскоеОбслуживание Тогда 		
		//Начало вставки: Задача: ONEC-MID-DIPLOM. Автор: Николаенков В.А. Дата: 01.09.2024
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			ОбщегоНазначения.СообщитьПользователю("Вид договора не соответствует",,,, Отказ);
		#Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
		#КонецЕсли
		//Конец вставки	
	КонецЕсли;
	
	Если Результат.ВКМ_ДатаНачалаДействияДоговора >= Результат.ДатаПроведенияРабот Или 
		 Результат.ВКМ_ДатаОкончанияДействияДоговора <= Результат.ДатаПроведенияРабот Тогда
		
		//Начало вставки: Задача: ONEC-MID-DIPLOM. Автор: Николаенков В.А. Дата: 01.09.2024
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			ОбщегоНазначения.СообщитьПользователю("Период действия договора не соответствует дате проведения работ",,,, Отказ);
		#Иначе
			ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
		#КонецЕсли
		//Конец вставки
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыполненныеРаботы) Тогда
		
		Отказ = Истина;
		
	Иначе
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		Для Каждого Работа Из ВыполненныеРаботы Цикл
			
			// регистр ВКМ_ВыполненныеКлиентуРаботы Расход	
			Движение                 = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения     = ВидДвиженияНакопления.Расход;
			Движение.Период          = Дата;
			Движение.Клиент          = Результат.Клиент;
			Движение.Договор         = Результат.Договор;
			Движение.КоличествоЧасов = Работа.ЧасыКОплатеКлиенту;
			Движение.СуммаКОплате    = Работа.ЧасыКОплатеКлиенту * Результат.ВКМ_СтоимостьЧасаРаботы;
			
			// регистр ВКМ_ВыполненныеСотрудникомРаботы Приход
			Движение              = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.ВидДвижения  = ВидДвиженияНакопления.Приход;
			Движение.Период       = Дата;
			Движение.Сотрудник    = Специалист;
			Движение.ЧасовКОплате = Работа.ЧасыКОплатеКлиенту;
			Движение.СуммаКОплате = Работа.ЧасыКОплатеКлиенту * Результат.ВКМ_СтоимостьЧасаРаботы * Результат.ПроцентОтРабот / 100;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


